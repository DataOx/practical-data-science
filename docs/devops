But what is the most important skill for 21st century success?

A willingness and ability to learn.

Gene Kim is a renowned DevOps researcher, author, and visionary. He identifies three things that are required to make DevOps happen:

"One is the cultural component. Certainly, the other part is tools and technology. The third part is architecture. You need great technology practices, which includes automation. You need a high-trust culture. And, it is architecture that enables you to get there." Good architecture facilitates deployability and testability.

Conway's law: Any organization that designs a system (defined broadly) will produce a design whose structure is a copy of the organization's communication structure.

The law is based on the reasoning that for a software module to function, multiple authors must communicate frequently with each other.

Therefore, the software interface structure of a system will reflect the social boundaries of the organization(s) that produced it, across which communication is more difficult.


All improvement requires change, but not all change is improvement. This is why measurement is a critical success factor to organizations using DevOps. As Peter Drucker says, “If you can’t measure it, you can’t improve it.”

Measure impact, not activity!
    Lead time for change: a measure of software delivery performance tempo. The time it takes for a bug fix, new feature, or any other change to go from idea to deployment to production.
    Deployment frequency: a direct or indirect measure of response time, team cohesiveness, developer capabilities, development tool effectiveness, and overall DevOps team efficiency.
    Mean time to restore: how long it generally takes to restore a primary app or service when a service incident occurs.
    Change fail percentage: the percentage of changes to production (including, for example, software releases and infrastructure configuration changes) that fail.


wildcard pattern **/*.csproj. Both ** and *.csproj are examples of what are called glob patterns. The ** part specifies to search the current directory and all child directories. The *.csproj part specifies any .csproj file. Wildcards let you act on multiple files without specifying each one. If you need to act on a specific file only, you can specify that file instead of using wildcards.

#value stream map
Creating a value stream map, or VSM, helps you analyze your current release cycle process. The purpose of a VSM is to visually show where in the process a team creates value and where there's waste. The goal, of course, is to arrive at a process that delivers maximum value to the customer with minimum waste. A VSM can help you pinpoint those areas that either don't contribute any value or that actually reduce the value of the product.
(https://docs.microsoft.com/en-us/learn/modules/assess-your-development-process/4-assess-process-efficiency)

# deployment patterns
Here are the possibilities we should consider:

    Blue-green deployment
    Canary releases
    Feature toggles
    Dark launches
    A/B testing
    Progressive-exposure deployment (ring-based deploymen)
    
    
:::mermaid
graph TB
    subgraph SAP
    ibp[SAP IBP]-->bw[SAP BW]
    end
bw-->sql[SQL Server]
subgraph Azure
sql-->aml[Azure ML]
